{"ast":null,"code":"var _jsxFileName = \"/Users/roll1226/personalDevelopment/apollo/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Apollo Clientを初期化する\n  const client = useMemo(() => new ApolloClient({\n    uri: \"http://localhost:4000\"\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"My first Apollo app\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Rocket\",\n            children: \"\\uD83D\\uDE80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Books, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/KoUf8dpTovukU4B6fVhiiXXF1g=\");\n\n_c = App;\n\nconst Books = () => {\n  _s2();\n\n  // 発行クエリを定義する\n  const booksQuery = useMemo(() => gql`\n      {\n        books {\n          title\n          author\n        }\n      }\n    `, []); // クエリを発行する\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(booksQuery); // 結果を表示する\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return data.books.map(({\n    title,\n    author\n  }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"book\", index + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"title:\", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"author:\", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n};\n\n_s2(Books, \"uBQMSB6fVSv+jq5l1ks1bKrHph8=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Books;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Books\");","map":{"version":3,"sources":["/Users/roll1226/personalDevelopment/apollo/client/src/App.js"],"names":["React","useMemo","ApolloClient","gql","ApolloProvider","useQuery","App","client","uri","Books","booksQuery","loading","error","data","books","map","title","author","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qBAAzC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAMC,MAAM,GAAGN,OAAO,CACpB,MAAM,IAAIC,YAAJ,CAAiB;AAAEM,IAAAA,GAAG,EAAE;AAAP,GAAjB,CADc,EAEpB,EAFoB,CAAtB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,MAAxB;AAAA,6BACE;AAAA,gCACE;AAAA,4CACsB,GADtB,eAEE;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAW,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtBD;;GAAMD,G;;KAAAA,G;;AAwBN,MAAMG,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAMC,UAAU,GAAGT,OAAO,CACxB,MAAME,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAR4B,EASxB,EATwB,CAA1B,CAFkB,CAclB;;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACK,UAAD,CAAzC,CAfkB,CAiBlB;;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAoBC,KAApB,kBACpB;AAAA,4BACE;AAAA,yBAASA,KAAK,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAUF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,4BAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD,CA5BD;;IAAMP,K;UAe6BJ,Q;;;MAf7BI,K;AA8BN,eAAeH,GAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  // Apollo Clientを初期化する\n  const client = useMemo(\n    () => new ApolloClient({ uri: \"http://localhost:4000\" }),\n    []\n  );\n\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <div>\n          <h2>\n            My first Apollo app{\" \"}\n            <span role=\"img\" aria-label=\"Rocket\">\n              🚀\n            </span>\n          </h2>\n          <Books />\n        </div>\n      </ApolloProvider>\n    </div>\n  );\n};\n\nconst Books = () => {\n  // 発行クエリを定義する\n  const booksQuery = useMemo(\n    () => gql`\n      {\n        books {\n          title\n          author\n        }\n      }\n    `,\n    []\n  );\n\n  // クエリを発行する\n  const { loading, error, data } = useQuery(booksQuery);\n\n  // 結果を表示する\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.books.map(({ title, author }, index) => (\n    <div key={title}>\n      <h3>book{index + 1}</h3>\n      <p>title:{title}</p>\n      <p>author:{author}</p>\n    </div>\n  ));\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}